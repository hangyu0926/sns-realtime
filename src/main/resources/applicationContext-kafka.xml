<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="cn.memedai.orientdb.sns.realtime.service.impl"/>

    <util:properties id="kafkaProp">
        <prop key="bootstrap.servers">99.48.88.104:9092</prop>
        <prop key="group.id">sns</prop><!--此值为前缀，程序为将拼接上数据库实例名-->
        <prop key="enable.auto.commit">false</prop>
        <!--<sns key="auto.commit.interval.ms" value="1000"/>-->
        <prop key="key.deserializer">org.apache.kafka.common.serialization.StringDeserializer</prop>
        <prop key="value.deserializer">org.apache.kafka.common.serialization.ByteArrayDeserializer</prop>
    </util:properties>


    <!--kafka消费的调度配置-->
    <!-- 注意：如下可以不配置，默认基于约定。
    -->
    <util:map id="kafkaDispatchConfig">
        <!--配置样例如下。默认可以不配置-->
        <!-- topic Start-->
        <!-- 和数据库名称,topic名称一致。与avsc文件中的namespace属性的最后一个"."后的单词一致-->
        <!--<entry key="wallet">-->
        <!--<map>-->
        <!--<entry key="tableConfig">-->
        <!--<map>-->
        <!--table Start-->
        <!-- 表名。与avsc文件中的name属性保持一致-->
        <!--<entry key="apply_info">-->
        <!--<map>-->

        <!--table service Start-->
        <!--<entry key="services">-->
        <!--处理数据的service bean。
            如果不配置默认根据topic名称+table名称拼接spring bean自动查找相应的bean-->
        <!--<list>-->
        <!--<ref bean="applyToOrientDBServiceImpl"/>-->
        <!--<ref bean="applyToMysqlServiceImpl"/>-->
        <!--</list>-->
        <!--</entry>-->
        <!--table service End-->
        <!--</map>-->
        <!--</entry>-->
        <!-- table End-->
        <!--</map>-->
        <!--</entry>-->
        <!--处理该topic的线程池配置。
          如果不配置默认一个线程处理-->
        <!--<entry key="threadPool">-->

        <!--</entry>-->
        <!--</map>-->
        <!--</entry>-->
        <!-- topic End-->

        <entry key="credit_audit">
            <map>
                <entry key="threadPool">
                    <bean class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
                        <constructor-arg index="0">
                            <value>5</value>
                        </constructor-arg>
                    </bean>
                </entry>
            </map>
        </entry>

    </util:map>

</beans>